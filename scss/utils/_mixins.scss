// Media Query Mixin
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}.";
  }
}

// Flexbox Mixins
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Grid Mixin
@mixin grid($columns: 1, $gap: $spacing-base) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Transition Mixin
@mixin transition($property: all, $duration: 0.3s, $timing: ease-in-out) {
  transition: $property $duration $timing;
}

// Box Shadow Mixin
@mixin box-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 2px 4px rgba($black, 0.1);
  } @else if $level == 2 {
    box-shadow: 0 4px 8px rgba($black, 0.1);
  } @else if $level == 3 {
    box-shadow: 0 8px 16px rgba($black, 0.1);
  }
}

// Button Mixin
@mixin button-variant($bg-color, $text-color: $white, $hover-bg: darken($bg-color, 10%)) {
  background-color: $bg-color;
  color: $text-color;
  border: none;
  padding: $spacing-sm $spacing-md;
  border-radius: $border-radius;
  @include transition;
  
  &:hover {
    background-color: $hover-bg;
  }
}

// Container Mixin
@mixin container($max-width: 1200px) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 $spacing-md;
} 